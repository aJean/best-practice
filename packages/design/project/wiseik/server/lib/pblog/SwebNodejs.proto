syntax = "proto2";
package baidu.imagesearch;

// 标识用户身份的id结构
message CookieUserid {
    optional string baiduid = 1;   // cookie中的baiduid字段或url中对应的参数
    optional string hao123id = 2;  // hao123业务特有的hao123id
    optional string cproid = 3;    // cpro业务特有的cproid
    optional string nmid = 4;      // 糯米id
}

message ViewInfo {
    optional string page_url = 1;         // 页面url
    optional string referer = 2;          // 来源url
    optional int32 display_num = 3;      // 展现结果数量
    optional string page_title = 4;       // 页面标题
    optional int32 page_num = 5;         // 页码
    optional bool is_pv = 6;              // 说明是否为pv，true为计算为pv
}

message HttpServiceInfo {
    optional string user_agent = 1;    // 客户端和useragent
    optional string request_url = 2;   // 请求的完整URL
    optional string http_method = 3;   // http方法，GET/POST
    optional string http_status = 4;   // http返回状态码
    optional string cookie = 5;        // 请求完整的cookie串
    optional string send_bytes = 6;    // 发送的数据量
    optional string response_time = 7; // 处理时间，单位为毫秒
    optional string http_version = 8;  // http版本
}

message Common {
    // 日志所属产品线名称，此名称根据日志的产品线归属自动生成默认值，不需要在程序中添加。
    optional string product_name = 1;

    // 日志名称，此名称由日志名称自动生成默认值，不需要在程序中添加。
    optional string module_name = 2;

    // 标识用户request的唯一id。logid主要用处将处理逻辑能够串联起来。我们强烈建议one action one logid。如果上游传入logid，本地将不要再重复生成，而是将上游的logid设置本字段中。
    required string logid = 3;

    // 标识用户身份的id，为一个结构，选择可以填写的部分添加。
    optional CookieUserid cookie_userid = 6;
        // 页面浏览信息
    optional ViewInfo view_info = 7;

        // httpservice打印的信息，如果不是httpservice类型的日志，不需要打印。
    optional HttpServiceInfo http_service_info = 8;

    // 服务器端记录的日志时间戳，单位为毫秒，此字段必打
    required int64 timestamp = 10;
}

message SwebNodejs {

    //----------------------------------------------------------------------------------------------------------------
    //  以下字段用于描述系统级传输信息，用户不需要关心。默认保留。
    //----------------------------------------------------------------------------------------------------------------

    //  传输配置字段，默认需要保留
    optional MetaData metadata                     = 25;
    optional string   log_tag                      = 26;



    // 统一公有字段
    required Common common = 41;


    //----------------------------------------------------------------------------------------------------------------
    //  以上id小于128的字段为预留字段，不能添加。用户自有字段id从129开始。
    //----------------------------------------------------------------------------------------------------------------

    // 本地时间
    optional string time_local = 130;

    // 用户IP
    optional string remote_addr = 132;


    // 响应体大小
    optional int32 body_bytes_sent = 134;

    // 压缩率
    optional float gzip = 135;


    // bduss
    optional string bduss = 138;


    // 请求时间
    optional float request_time = 140;

    // 检索结果
    optional string search_result = 141;

    // uri
    optional string request_uri = 143;

    // 请求协议
    optional string server_protocol = 144;

    // nginx生成的logid
    optional string bfe_logid = 145;

    // nginx抽样id
    optional string sid = 146;

	 // 标注用户来源
    optional string user_from = 147 ;

    // 大搜wise抽样sid
    optional string ps_wise_sid = 148;
}

// 以下信息用于Minos的传输配置，用户无需关心
// 如确定不使用Minos，也可以删除
message MetaData {
    optional int32 log_module_id   =  1 [default = 1489];
    optional string log_name        =  2 [default = "sweb_nodejs"];
    optional string product_name    =  3 [default = "imagesearch"];
}
